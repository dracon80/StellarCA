apiVersion: apps/v1
kind: Deployment
metadata:
  name: stellar-web-deployment
spec:
  selector:
    matchLabels:
      app: stellar
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: stellar
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: stellar-web
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
          image: nginxinc/nginx-unprivileged:alpine
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 256Mi
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: web-data-pvc
              mountPath: /usr/share/nginx/html/
      volumes:
        - name: web-data-pvc
          persistentVolumeClaim:
            claimName: stellar-web-data-pvc
            readOnly: true
      restartPolicy: Always
